name: Publish Extension

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Build extension
      run: npm run package

    - name: Create VSIX package
      run: npx @vscode/vsce package

    - name: Get package version
      id: package-version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Create release commit and tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Check if tag already exists
        if git rev-parse "v${{ steps.package-version.outputs.version }}" >/dev/null 2>&1; then
          echo "Tag v${{ steps.package-version.outputs.version }} already exists, skipping..."
        else
          # Create commit if there are changes
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "ðŸš€ Release v${{ steps.package-version.outputs.version }}

        - Updated package version to ${{ steps.package-version.outputs.version }}
        - Ready for marketplace publication
        - Generated VSIX package"
          fi

          # Create tag
          git tag -a "v${{ steps.package-version.outputs.version }}" -m "Release version ${{ steps.package-version.outputs.version }}

        ðŸŽ¯ Features:
        - JSON to Dart class conversion
        - Null safety support
        - Compatible with VSCode and Cursor IDE

        ðŸ“¦ Package: json4dart-${{ steps.package-version.outputs.version }}.vsix"

          # Push changes and tag
          git push origin HEAD
          git push origin "v${{ steps.package-version.outputs.version }}"
        fi

    - name: Publish to VSCode Marketplace
      run: npx @vscode/vsce publish -p ${{ secrets.VSCE_PAT }}
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}

    - name: Publish to OpenVSX Registry
      run: npx ovsx publish -p ${{ secrets.OVSX_PAT }}
      env:
        OVSX_PAT: ${{ secrets.OVSX_PAT }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package-version.outputs.version }}
        release_name: Release v${{ steps.package-version.outputs.version }}
        body: |
          ## Changes in v${{ steps.package-version.outputs.version }}

          ### âœ¨ Features
          - Automatic publication to both VSCode Marketplace and OpenVSX Registry
          - Full compatibility with Cursor IDE

          ### ðŸ”— Installation

          **VSCode/VSCode Insiders:**
          ```
          ext install fdenisnascimento.json2dart
          ```

          **Cursor IDE:**
          Search for "FDN Json 4 Dart" in the Extensions panel

          ### ðŸ“¦ Downloads
                  - [VSCode Marketplace](https://marketplace.visualstudio.com/items?itemName=fdenisnascimento.json2dart)
        - [OpenVSX Registry](https://open-vsx.org/extension/fdenisnascimento/json2dart)
        draft: false
        prerelease: false

    - name: Upload VSIX to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./json2dart-${{ steps.package-version.outputs.version }}.vsix
        asset_name: json2dart-${{ steps.package-version.outputs.version }}.vsix
        asset_content_type: application/zip

  test-installation:
    needs: publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        registry: [vscode, openvsx]

    steps:
    - name: Wait for publication
      run: sleep 60  # Aguarda 1 minuto para propagaÃ§Ã£o

    - name: Verify VSCode Marketplace publication
      if: matrix.registry == 'vscode'
      run: |
        curl -f "https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery" \
          -X POST \
          -H "Content-Type: application/json" \
          -d '{"filters":[{"criteria":[{"filterType":7,"value":"fdenisnascimento.json2dart"}]}],"flags":914}' \
          | jq -e '.results[0].extensions | length > 0'

    - name: Verify OpenVSX publication
      if: matrix.registry == 'openvsx'
      run: |
              curl -f "https://open-vsx.org/api/fdenisnascimento/json2dart" \
      | jq -e '.name == "json2dart"'